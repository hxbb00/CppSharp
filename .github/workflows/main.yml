name: CI

on:
    workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        dotnet-version: [ '3.1.426' ]
        config:
          - { os: ubuntu-20.04, platform: x64, cxx: g++-9, cc: gcc-9 }
          - { os: windows-2019, platform: x64, vs: msvc }

    runs-on: ${{ matrix.config.os }}

    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
      PLATFORM: ${{ matrix.config.platform }}
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      # You can test your matrix by printing the current dotnet version
      - name: Display dotnet version
        run: dotnet --version

      - name: Uninstall nbgv
        run: |
          dotnet tool uninstall --global nbgv

      - name: Install nbgv
        run: |
          dotnet tool install --global nbgv --version 3.5.119

      - name: Set version
        run: nbgv cloud --all-vars

      - name: Environment
        if: matrix.config.vs
        shell: bash
        run: echo "/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin" >> $GITHUB_PATH

      - name: Setup
        shell: bash
        run: |
          build/build.sh generate -platform $PLATFORM
          build/build.sh download_llvm -platform $PLATFORM

      - name: Restore
        shell: bash
        run: build/build.sh restore -platform $PLATFORM

      - name: Build
        shell: bash
        run: build/build.sh -platform $PLATFORM -build_only

      # - name: Test
      #   shell: bash
      #   run: build/test.sh -platform $PLATFORM

      - name: Pack
        shell: bash
        run: build/build.sh prepack -platform $PLATFORM

      - uses: actions/upload-artifact@v2
        with:
          name: intermediate
          path: |
            artifacts
            include/**/*.h

  create_package:
    runs-on: windows-2019
    needs: build

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set version
        run: nbgv cloud --all-vars

      - uses: actions/download-artifact@v2
        with:
          name: intermediate

      - name: Setup
        shell: bash
        run: build/build.sh generate_config

      - name: Create package
        shell: bash
        run: build/build.sh pack

      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: CppSharp.nupkg
          path: |
            artifacts/*.nupkg

      - name: Upload package to GitHub Packages
        run: |
          cd artifacts
          dotnet nuget push "*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/hxbb00/index.json" --skip-duplicate

      - name: Publish package to nuget.org
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd artifacts
          dotnet nuget push "*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json" --skip-duplicate
